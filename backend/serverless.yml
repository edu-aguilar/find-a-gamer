

service: find-a-gamer

# app and org for use with dashboard.serverless.com
app: find-a-gamer

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation


package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  environment:
    EVENTS_TABLE: Events-${self:provider.stage}

# custom:
#   documentation:
#     api:
#       info:
#         version: v0.0.1
#         title: Serverless find-a-gamer API
#         description: find-a-gamer Serverless app
#     models:
#       - name: CreateEventRequest
#         contentType: application/json
#         schema: ${file(src/requests/create-event-request.json)}
#       - name: UpdateEventRequest
#         contentType: application/json
#         schema: ${file(src/requests/update-event-request.json)}

functions:
  
  CreateTodo:
    handler: src/lambda/http/createEvent.handler
    events:
      - http:
          method: post
          path: events
          cors: true
          # reqValidatorName: RequestBodyValidator
          documentation:
            summary: Create a new Event
            description: Create a new Event
            # requestModels:
            #   'application/json': CreateTodoRequest
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamoDB:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.EVENTS_TABLE}


resources:
 Resources:
  EventsDynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: eventId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
        - AttributeName: gameId
          AttributeType: S
      KeySchema:
        - AttributeName: eventId
          KeyType: HASH
        - AttributeName: gameId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableName: ${self:provider.environment.EVENTS_TABLE}
      GlobalSecondaryIndexes:
        - IndexName: ${self:provider.environment.GAME_ID_INDEX}
          KeySchema:
          - AttributeName: gameId
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
          Projection:
            ProjectionType: ALL
